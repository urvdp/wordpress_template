
services:
  wordpress:
    image: wordpress:latest
    container_name: wordpress
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: mysql
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      VIRTUAL_HOST: ${HOSTNAME}
      LETSENCRYPT_HOST: ${HOSTNAME}
      LETSENCRYPT_EMAIL: ${EMAIL}
    depends_on:
      - db
    volumes:
      - wordpress:/var/www/html
    networks:
      - frontend
      - backend

  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_certs:/etc/nginx/certs:rw
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_acme:/etc/acme.sh
    networks:
      - frontend

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme
    depends_on:
      - nginx-proxy
    environment:
      DEFAULT_EMAIL: ${EMAIL}
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx_certs:/etc/nginx/certs:rw
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_acme:/etc/acme.sh
    networks:
      - frontend

  db:
    image: mysql:5.7
    container_name: wordpress_db
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: mysql
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend

volumes:
  db_data: { }
  wordpress: { }
  nginx_certs: { }
  nginx_vhost: { }
  nginx_html: { }
  nginx_acme: { }

networks:
    frontend: {}
    backend: {}